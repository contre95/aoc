package main

import (
	"bufio"
	"fmt"
	"os"
	"sort"
)

func check(e error) {
	if e != nil {
		panic(e)
	}
}

func fileToSlice(fp string) ([]string, error) {
	var lines []string
	f, err := os.Open(fp)
	check(err)
	scanner := bufio.NewScanner(f)
	for scanner.Scan() {
		lines = append(lines, scanner.Text())
	}
	defer f.Close()
	sort.Strings(lines)
	return lines, scanner.Err()
}

func getBoardingPassID(bp string) int {
	upper_row := 127
	upper_col := 7
	lower_row := 0
	lower_col := 0
	var row int
	var col int
	//fb := []rune(bp)[:7]
	//rl := []rune(bp)[4]
	for _, c := range bp {
		if c == "F" {
			upper_row /= 2
		}
		if c == "B" {
			lc = lc / 2

		}
		if c == "R" {

		}
		if c == "L" {

		}
	}
	return 0
}

func main() {
	bps, err := fileToSlice("input.txt")
	check(err)
	fmt.Println(bps)
	var ids []int
	check(err)
	for _, bp := range bps {
		ids = append(ids, getBoardingPassID(bp))
	}
	//Retrun Max Id from ids
}
